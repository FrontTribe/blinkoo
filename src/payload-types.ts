/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    merchants: Merchant;
    venues: Venue;
    categories: Category;
    offers: Offer;
    'offer-slots': OfferSlot;
    'offer-collections': OfferCollection;
    'offer-templates': OfferTemplate;
    claims: Claim;
    reviews: Review;
    favorites: Favorite;
    'saved-offers': SavedOffer;
    achievements: Achievement;
    'user-stats': UserStat;
    waitlists: Waitlist;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    merchants: MerchantsSelect<false> | MerchantsSelect<true>;
    venues: VenuesSelect<false> | VenuesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    offers: OffersSelect<false> | OffersSelect<true>;
    'offer-slots': OfferSlotsSelect<false> | OfferSlotsSelect<true>;
    'offer-collections': OfferCollectionsSelect<false> | OfferCollectionsSelect<true>;
    'offer-templates': OfferTemplatesSelect<false> | OfferTemplatesSelect<true>;
    claims: ClaimsSelect<false> | ClaimsSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    favorites: FavoritesSelect<false> | FavoritesSelect<true>;
    'saved-offers': SavedOffersSelect<false> | SavedOffersSelect<true>;
    achievements: AchievementsSelect<false> | AchievementsSelect<true>;
    'user-stats': UserStatsSelect<false> | UserStatsSelect<true>;
    waitlists: WaitlistsSelect<false> | WaitlistsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  phone?: string | null;
  phoneVerified?: boolean | null;
  role: 'customer' | 'merchant_owner' | 'staff' | 'admin';
  onboardingCompleted?: boolean | null;
  deviceFingerprint?: string | null;
  merchant?: (number | null) | Merchant;
  venues?:
    | {
        venue?: (number | null) | Venue;
        id?: string | null;
      }[]
    | null;
  notificationPreferences?: {
    inApp?: boolean | null;
    email?: boolean | null;
    push?: boolean | null;
  };
  /**
   * OneSignal player ID for push notifications
   */
  oneSignalPlayerId?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "merchants".
 */
export interface Merchant {
  id: number;
  owner: number | User;
  name: string;
  description?: string | null;
  logo?: (number | null) | Media;
  stripeAccountId?: string | null;
  kycStatus: 'pending' | 'approved' | 'rejected';
  approvedAt?: string | null;
  categories?:
    | {
        category:
          | 'food_beverage'
          | 'cafe'
          | 'restaurant'
          | 'bar'
          | 'retail'
          | 'services'
          | 'entertainment'
          | 'fitness'
          | 'other';
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "venues".
 */
export interface Venue {
  id: number;
  merchant: number | Merchant;
  name: string;
  description?: string | null;
  address: string;
  city: string;
  country: string;
  lat: number;
  lng: number;
  phone?: string | null;
  email?: string | null;
  openHours?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  photos?:
    | {
        photo?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  category: number | Category;
  status: 'active' | 'inactive' | 'closed';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  /**
   * Auto-generated from name if left empty
   */
  slug: string;
  /**
   * Select an icon for this category
   */
  icon:
    | 'FiGrid'
    | 'FiCoffee'
    | 'FiFilm'
    | 'FiShoppingBag'
    | 'FiTool'
    | 'FiActivity'
    | 'FiHeart'
    | 'FiMusic'
    | 'FiCamera'
    | 'FiSmile'
    | 'FiBook'
    | 'FiGamepad'
    | 'FiPenTool'
    | 'FiMap'
    | 'FiMapPin'
    | 'FiHome'
    | 'FiBuilding'
    | 'FiGlobe'
    | 'FiStar'
    | 'FiTag';
  /**
   * Color class for this category (e.g., "orange-primary")
   */
  color?: string | null;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offers".
 */
export interface Offer {
  id: number;
  venue: number | Venue;
  /**
   * Auto-populated from venue
   */
  category?: (number | null) | Category;
  title: string;
  description?: string | null;
  terms?: string | null;
  type: 'percent' | 'fixed' | 'bogo' | 'addon';
  /**
   * Percentage (0-100) for percent type, or fixed amount for fixed type
   */
  discountValue?: number | null;
  /**
   * Minimum price for price-drop mechanics
   */
  priceFloor?: number | null;
  photo?: (number | null) | Media;
  visibleFrom?: string | null;
  visibleTo?: string | null;
  /**
   * How many times a user can claim this offer
   */
  perUserLimit?: number | null;
  /**
   * Cooldown period between user claims
   */
  cooldownMinutes?: number | null;
  /**
   * Distance requirement to claim (0 = no restriction)
   */
  geofenceKm?: number | null;
  status: 'active' | 'paused' | 'archived';
  /**
   * Calculated average from reviews
   */
  averageRating?: number | null;
  /**
   * Total number of reviews
   */
  totalReviews?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offer-slots".
 */
export interface OfferSlot {
  id: number;
  offer: number | Offer;
  startsAt: string;
  endsAt: string;
  /**
   * Total units available in this slot
   */
  qtyTotal: number;
  qtyRemaining: number;
  mode: 'flash' | 'drip';
  /**
   * For drip mode: release units every X minutes
   */
  dripEveryMinutes?: number | null;
  /**
   * For drip mode: how many units per release
   */
  dripQty?: number | null;
  state: 'scheduled' | 'live' | 'paused' | 'ended';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offer-collections".
 */
export interface OfferCollection {
  id: number;
  title: string;
  /**
   * URL-friendly identifier
   */
  slug: string;
  description?: string | null;
  photo?: (number | null) | Media;
  /**
   * Add offers to this collection
   */
  offers?: (number | Offer)[] | null;
  /**
   * Show on homepage
   */
  featured?: boolean | null;
  active?: boolean | null;
  category?:
    | ('date-night' | 'weekend-brunch' | 'happy-hour' | 'family-friendly' | 'budget-eats' | 'special-occasions')
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offer-templates".
 */
export interface OfferTemplate {
  id: number;
  merchant: number | Merchant;
  /**
   * e.g., "Weekday Lunch Special"
   */
  name: string;
  description?: string | null;
  recurrence: 'daily' | 'weekly' | 'monthly';
  daysOfWeek?:
    | {
        day: 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday';
        id?: string | null;
      }[]
    | null;
  /**
   * e.g., "14:00" (24-hour format)
   */
  startTime: string;
  /**
   * e.g., "17:00" (24-hour format)
   */
  endTime: string;
  /**
   * Total units per slot
   */
  qtyTotal: number;
  mode: 'flash' | 'drip';
  /**
   * For drip mode only
   */
  dripEveryMinutes?: number | null;
  /**
   * For drip mode only
   */
  dripQty?: number | null;
  /**
   * Only active templates can be used
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "claims".
 */
export interface Claim {
  id: number;
  user: number | User;
  offer: number | Offer;
  slot: number | OfferSlot;
  status: 'RESERVED' | 'REDEEMED' | 'EXPIRED' | 'CANCELLED';
  reservedAt?: string | null;
  expiresAt: string;
  redeemedAt?: string | null;
  qrToken?: string | null;
  sixCode?: string | null;
  staff?: (number | null) | User;
  /**
   * Optional: Total basket value for ROI calculations
   */
  basketTotal?: number | null;
  /**
   * Whether the user has submitted a review for this claim
   */
  reviewed?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  user: number | User;
  offer: number | Offer;
  /**
   * Rating from 1 to 5
   */
  rating: number;
  comment?: string | null;
  photos?:
    | {
        photo?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "favorites".
 */
export interface Favorite {
  id: number;
  user: number | User;
  venue: number | Venue;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "saved-offers".
 */
export interface SavedOffer {
  id: number;
  user: number | User;
  offer: number | Offer;
  /**
   * Get notified when a new slot becomes available for this offer
   */
  notifyOnSlotStart?: boolean | null;
  /**
   * Get notified 30 minutes before a slot starts
   */
  notify30MinBefore?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "achievements".
 */
export interface Achievement {
  id: number;
  name: string;
  description: string;
  /**
   * Emoji or icon identifier (e.g., 🎯, 🏆, ⭐)
   */
  icon: string;
  tier: 'bronze' | 'silver' | 'gold' | 'platinum';
  /**
   * JSON object defining the criteria to unlock this achievement
   */
  criteria?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-stats".
 */
export interface UserStat {
  id: number;
  user: number | User;
  totalClaims?: number | null;
  totalReviews?: number | null;
  categoriesClaimed?:
    | {
        category?: (number | null) | Category;
        id?: string | null;
      }[]
    | null;
  venuesClaimed?:
    | {
        venue?: (number | null) | Venue;
        id?: string | null;
      }[]
    | null;
  longestStreak?: number | null;
  currentStreak?: number | null;
  lastClaimDate?: string | null;
  unlockedAchievements?:
    | {
        achievement?: (number | null) | Achievement;
        unlockedAt?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "waitlists".
 */
export interface Waitlist {
  id: number;
  user: number | User;
  offer: number | Offer;
  position?: number | null;
  autoClaim?: boolean | null;
  notified?: boolean | null;
  status?: ('waiting' | 'available' | 'claimed' | 'cancelled') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'merchants';
        value: number | Merchant;
      } | null)
    | ({
        relationTo: 'venues';
        value: number | Venue;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'offers';
        value: number | Offer;
      } | null)
    | ({
        relationTo: 'offer-slots';
        value: number | OfferSlot;
      } | null)
    | ({
        relationTo: 'offer-collections';
        value: number | OfferCollection;
      } | null)
    | ({
        relationTo: 'offer-templates';
        value: number | OfferTemplate;
      } | null)
    | ({
        relationTo: 'claims';
        value: number | Claim;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null)
    | ({
        relationTo: 'favorites';
        value: number | Favorite;
      } | null)
    | ({
        relationTo: 'saved-offers';
        value: number | SavedOffer;
      } | null)
    | ({
        relationTo: 'achievements';
        value: number | Achievement;
      } | null)
    | ({
        relationTo: 'user-stats';
        value: number | UserStat;
      } | null)
    | ({
        relationTo: 'waitlists';
        value: number | Waitlist;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  phone?: T;
  phoneVerified?: T;
  role?: T;
  onboardingCompleted?: T;
  deviceFingerprint?: T;
  merchant?: T;
  venues?:
    | T
    | {
        venue?: T;
        id?: T;
      };
  notificationPreferences?:
    | T
    | {
        inApp?: T;
        email?: T;
        push?: T;
      };
  oneSignalPlayerId?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "merchants_select".
 */
export interface MerchantsSelect<T extends boolean = true> {
  owner?: T;
  name?: T;
  description?: T;
  logo?: T;
  stripeAccountId?: T;
  kycStatus?: T;
  approvedAt?: T;
  categories?:
    | T
    | {
        category?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "venues_select".
 */
export interface VenuesSelect<T extends boolean = true> {
  merchant?: T;
  name?: T;
  description?: T;
  address?: T;
  city?: T;
  country?: T;
  lat?: T;
  lng?: T;
  phone?: T;
  email?: T;
  openHours?: T;
  photos?:
    | T
    | {
        photo?: T;
        id?: T;
      };
  category?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  icon?: T;
  color?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offers_select".
 */
export interface OffersSelect<T extends boolean = true> {
  venue?: T;
  category?: T;
  title?: T;
  description?: T;
  terms?: T;
  type?: T;
  discountValue?: T;
  priceFloor?: T;
  photo?: T;
  visibleFrom?: T;
  visibleTo?: T;
  perUserLimit?: T;
  cooldownMinutes?: T;
  geofenceKm?: T;
  status?: T;
  averageRating?: T;
  totalReviews?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offer-slots_select".
 */
export interface OfferSlotsSelect<T extends boolean = true> {
  offer?: T;
  startsAt?: T;
  endsAt?: T;
  qtyTotal?: T;
  qtyRemaining?: T;
  mode?: T;
  dripEveryMinutes?: T;
  dripQty?: T;
  state?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offer-collections_select".
 */
export interface OfferCollectionsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  photo?: T;
  offers?: T;
  featured?: T;
  active?: T;
  category?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "offer-templates_select".
 */
export interface OfferTemplatesSelect<T extends boolean = true> {
  merchant?: T;
  name?: T;
  description?: T;
  recurrence?: T;
  daysOfWeek?:
    | T
    | {
        day?: T;
        id?: T;
      };
  startTime?: T;
  endTime?: T;
  qtyTotal?: T;
  mode?: T;
  dripEveryMinutes?: T;
  dripQty?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "claims_select".
 */
export interface ClaimsSelect<T extends boolean = true> {
  user?: T;
  offer?: T;
  slot?: T;
  status?: T;
  reservedAt?: T;
  expiresAt?: T;
  redeemedAt?: T;
  qrToken?: T;
  sixCode?: T;
  staff?: T;
  basketTotal?: T;
  reviewed?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  user?: T;
  offer?: T;
  rating?: T;
  comment?: T;
  photos?:
    | T
    | {
        photo?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "favorites_select".
 */
export interface FavoritesSelect<T extends boolean = true> {
  user?: T;
  venue?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "saved-offers_select".
 */
export interface SavedOffersSelect<T extends boolean = true> {
  user?: T;
  offer?: T;
  notifyOnSlotStart?: T;
  notify30MinBefore?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "achievements_select".
 */
export interface AchievementsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  icon?: T;
  tier?: T;
  criteria?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user-stats_select".
 */
export interface UserStatsSelect<T extends boolean = true> {
  user?: T;
  totalClaims?: T;
  totalReviews?: T;
  categoriesClaimed?:
    | T
    | {
        category?: T;
        id?: T;
      };
  venuesClaimed?:
    | T
    | {
        venue?: T;
        id?: T;
      };
  longestStreak?: T;
  currentStreak?: T;
  lastClaimDate?: T;
  unlockedAchievements?:
    | T
    | {
        achievement?: T;
        unlockedAt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "waitlists_select".
 */
export interface WaitlistsSelect<T extends boolean = true> {
  user?: T;
  offer?: T;
  position?: T;
  autoClaim?: T;
  notified?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}